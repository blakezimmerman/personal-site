---
import { lightThemeClass, darkThemeClass } from "../styles/theme.css";
import "../styles/global.css";

import "@fontsource/poppins/400.css";
import "@fontsource/poppins/500.css";
import "@fontsource/poppins/700.css";

export interface Props {
  title: string;
}

const { title } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class={lightThemeClass}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <link rel="icon" href="/favicon.png" type="image/png" />
    <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
    <link
      rel="mask-icon"
      href="/mask-icon.svg"
      color="#ffffff"
      media="(prefers-color-scheme: light)"
    />
    <link
      rel="mask-icon"
      href="/mask-icon.svg"
      color="#000000"
      media="(prefers-color-scheme: dark)"
    />
    <link rel="apple-touch-icon" href="/apple-touch-icon.png" />
    <meta name="theme-color" content="#ffffff" media="(prefers-color-scheme: light)" />
    <meta name="theme-color" content="#000000" media="(prefers-color-scheme: dark)" />
    <title>{title}</title>
    <meta
      name="description"
      content="An NYC-based software engineer that's dedicated to his craft."
    />
    <meta
      name="keywords"
      content="Blake,Zimmerman,JavaScript,TypeScript,React,Software,Engineering,Web,Developer,NYC"
    />
  </head>
  <body>
    <main>
      <slot />
    </main>
  </body>
</html>
<script define:vars={{ darkThemeClass }}>
  function applyColorScheme(colorScheme) {
    document.documentElement.style.setProperty("color-scheme", colorScheme);
    if (colorScheme === "dark") document.documentElement.classList.add(darkThemeClass);
    else document.documentElement.classList.remove(darkThemeClass);
  }

  // Apply initial color scheme
  const mql = window.matchMedia("(prefers-color-scheme: dark)");
  applyColorScheme(mql.matches ? "dark" : "light");

  // Listen for color scheme changes
  mql.addEventListener("change", (e) => {
    const newColorScheme = e.matches ? "dark" : "light";
    applyColorScheme(newColorScheme);
  });
</script>
